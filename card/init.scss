/*!

  Radancy Component Library: Card
  Contributor(s):
  Michael "Spell" Spellacy

  Dependencies: Sass

*/

// Card (.card)

.card {

// Component Variables

--card-base-color: #6F00EF;
--card-columns: 3;
--card-horizontal-rows: 2;
--card-secondary-color: #767676;
--card-transition: 300ms;

$card-breakpoint: 60em;

display: grid;
gap: 1rem;
list-style: none;
margin: 0;
overflow-wrap: break-word;
padding: 0;
text-wrap: balance;

  &:not([data-horizontal]) {

    text-wrap: pretty;
  
    @media (min-width: 60em) {

      grid-template-columns: repeat(var(--card-columns), 1fr);

    }

  }

  // Item (.card__item)
  
  &__item {
  border: 1px var(--card-secondary-color) solid;
  display: grid;
  grid-template-rows: subgrid;
  padding: 1rem;
  position: relative; // Needed for pseudo-element trick.
  transition: var(--card-transition);

    &:has(> :nth-child(2):last-child) {
    grid-row: span 2;
    }

    &:has(> :nth-child(3):last-child), &:has(.card__block) {
    grid-row: span 3;
    }

    &:has(> :nth-child(4):last-child) {
    grid-row: span 4;
    }

    [data-horizontal] & {

      @media (min-width: $card-breakpoint) {

        gap: inherit;
        grid-auto-flow: column;
        grid-template-rows: min-content repeat(calc(var(--card-horizontal-rows) - 1), 1fr);
      
      }

    }
  
    &:focus-within, &:hover {
    background-color: #eee;
  
      .card__trigger {

        &::after {
        transform: translateX(calc(5em/16));
        }

      }

      .card__play {
      transform: scale(1.2);
      }
  
    }
      
  }

  // Block (.card__block) 

  &__block {
  display: grid;
  grid-row: inherit;
  grid-template-rows: subgrid;
  }

  // Media (.card__media)
  
  &__media {
  display: grid;

    [data-horizontal] & {

      @media (min-width: $card-breakpoint) {

        grid-row: span var(--card-horizontal-rows);
  
      }

    }

    picture {
    display: contents;
    }

    img, video {
    border-radius: 5px;
    border: calc(1rem / 16) var(--card-secondary-color) solid;
    display: block;
    grid-area: 1 / 1;
    inline-size: 100%;
    }

  }

  // Play Button (.card__play)

  &__play {
  grid-area: 1 / 1;
  inline-size: calc(40em / 16);
  margin-block-end: 1rem;
  margin-inline-end: 1rem;
  place-self: end;
  transition: var(--card-transition);

    path {
    fill: #fff;
    }

  }

  // Eyebrow (.card__eyebrow)

  &__eyebrow {
  color: var(--card-base-color);
  }

  // Title (.card__title)
  
  &__title {
  color: var(--card-base-color);
  font-size: calc(22.4rem / 16);
  line-height: normal;
  margin: 0;
  text-wrap: auto;
  width: fit-content;

    // If text is not a heading, then center it.
  
    &:not(h2):not(h3):not(h4):not(h5):not(h6) {
    justify-self: center;
    text-align: center;
    }
  
  }

  // Trigger (.card__trigger)

  &__trigger {
  background-color: transparent;
  border: 0;
  color: inherit;
  cursor: pointer;
  display: grid;
  font: inherit;
  gap: 0.3em;
  grid-auto-flow: column;
  margin: 0;
  padding: 0;
  text-decoration: none;

    &:visited {
    color: #000;
    }

    [data-remove-arrow] & {

      text-decoration: underline;

      &:focus, &:hover {
      text-decoration: none;
      }

    }
    
    // CTA
    // NOTE: HTML Entity being used, but you can use Font Awesome or inline SVG, too.

    &:not(button) {
  
      &::after {
      content: "\0279C";
      display: block;
      transition: var(--card-transition);

        [data-remove-arrow] & {

          display: none;

        }

      }

    }
  
  }

  // Summary (.card__summary)

  &__summary {

    p  {
    margin: 0;
    
      &:not(:last-child) {
      margin-block-end: 1rem;
      }

      &:last-child {
      margin-block-end: 0;
      }

    }

  }

  // CTA (.card__cta)

  &__cta {
  color: var(--card-base-color);
  font-weight: bold;
  }

  // Shared: Category (.card__category) & Metadata (.card__metadata)
  // TODO: Make part of grid; may need 12 column grid instead of 3. 

  &__category, &__metadata, &__links {
  display: flex;
  flex-wrap: wrap;
  font-size: 0.9rem;
  gap: 0.5rem;
  line-height: normal;
  list-style: none;
  padding: 0;

    li:not(:last-child)::after {
    padding: 0 0.5rem;
    }
  
  }

  // Category (.card__category)

  &__category {

    li {
    background-color: #ccc;
    border-radius: calc(5rem / 16);
    padding: 0.5rem 1rem 0.7rem;
    }
  
  }

  // Metadata (.card__metadata)

  &__metadata {

    li:not(:last-child)::after {
    content: "|";
    }

  }

  // Links (.card__links)

  &__links {

    a {
    background-color: var(--card-base-color);
    color: #fff;
    display: block;
    padding: 0.8rem;
    text-decoration: none;
  
      &:focus-visible, &:hover {
      text-decoration: underline;
      }
  
    }
  
  }

  // Pseudo-element Trick (.card__click)

  &__click {
  
    &::before {
    content: "";
    display: block;
    inset: 0;
    position: absolute;
    z-index: 1;
    }

  }
  
}