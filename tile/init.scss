/*!

  Radancy Component Library: Card Flip

  Contributor(s):
  Michael "Spell" Spellacy

  Dependencies: Sass

  Instructions:
  sass --watch .:. --style compressed

*/

$base-color: #6F00EF;
$transition-duration: 0.8s;

// Card (.tile)

.tile {
display: grid;
gap: 1.5em;
list-style: none;
margin: 0;
padding: 0;
width: fit-content;

  // Change 3 to 4 (or higher) if you have a 4x grid.
  
  @media (min-width: calc(40ch * 3)) {

    grid-template-columns: repeat(3, 1fr);

  }

  // Item (.tile__item)
  
  &__item {
  display: grid;
  perspective: 1500px;
  position: relative; // Needed for pseudo-element trick.
  }

  // Item (.tile__content)

  &__content {
  display: grid;
  grid-area: 1 / 1;
  transform-style: preserve-3d;
  transition-property: transform;
  will-change: transform;

    @media (prefers-reduced-motion: no-preference) {

      transition-duration: $transition-duration;

    }

    .show & {
    transform: rotateY(180deg);
    }

  }

  // Button (.tile__trigger)

  &__trigger {
  background-color: $base-color;
  border-radius: 50%;
  border: 0;
  color: #fff;
  cursor: pointer;
  font-size: 1.2rem;
  grid-area: 1 / 1;
  height: 40px;
  margin-block: 1em 0;
  margin-inline: auto 1em;
  width: 40px;
  z-index: 1;
    
    // Button Icon

    &[aria-pressed="false"] {
    
      &::after {
      content: "+";
      }

    }

    &[aria-pressed="true"] {
    
      &::after {
      content: "-";
      }

    }

  }

  // Label (.tile__label)

  &__label {
  font-size: 2rem;
  font-weight: bold;
  line-height: normal;
  place-self: center;
  text-align: center;
  }

  // Card (.tile__cta & .tile__disclosure)

  &__cta, &__disclosure {
  background-color: #fff;
  backface-visibility: hidden;
  border: 1px #767676 solid;
  border-radius: 5px;
  display: grid;
  grid-column: 1;
  grid-row: 1;
  padding: 1em;
  transition: $transition-duration;
  }

  // CTA (.tile__cta)

  &__cta {
  background-color: #eee;
  opacity: 1;
  place-content: center;
  visibility: visible;

    .show & {
    opacity: 0;
    visibility: hidden;
    }

  }

  // Disclosure (.tile__disclosure)

  &__disclosure {
  transform: rotateY(180deg);
  place-content: start;
  opacity: 0;
  visibility: hidden;

    .show & {
    opacity: 1;
    visibility: visible;
    }

  }

  // Clickable Region
  
  // Note: Only allow entire region to be clickable when certain elements are not present in card. 
  // This should cover most use cases, but do add new conditions as needs arise.

  &:not(:has(a)):not(:has(video)):not(:has(.tile__content button)) {

    .tile__trigger {

      // Pseudo-element Trick
  
      &::before {
      content: "";
      display: block;
      inset: 0;
      position: absolute;
      z-index: 1;
      }

    }

  }
  
}